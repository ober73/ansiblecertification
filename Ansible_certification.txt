Ansible Certification Course

--check (this is a dry run)


--start-at-task (this will start at a certain task)

you can tag your tasks in the yaml

then use --tasks "install" for example to only run that task

or --skip-tags "install"



EX:

---
- name: Create a myfile.txt
  hosts: web1
  gather_facts: no
  tasks:
    - name: Create myfile.txt
      file:
        path: /root/myfile.txt
        state: touch
        
        
        
ANSIBLE FACTS

setup module gathers facts

info stored in var: ansible_facts

tasks:
- debug
    var: ansible_facts
    
You can turn this off by
gather_facts: no

Settings in Playbooks always takes precedence over settings in ansible.cfg



EX:

ansible -m setup localhost | grep distribution_version


ansible -i inventory -m setup web1 | grep distribution


Gather Facts and store:

ansible -m setup web1 -i inventory > /home/thor/playbooks/web/web-facts.txt


ANSIBLE CONFIGURATION FILES

you can use separate ansible.cfg files for different playbooks if put in the same directory as the playbook

or you can use var EX:

$ANSIBLE_CONFIG=/opt/...

Variable change what is in the cfg file to upper case

EX:
gathering = implicit

ANSIBLE_GATHERING=explicit

use shell EXPORT, this takes priority


ansible-config list

ansible-config view

ansible-config dump


Install and Configure


control node

use pip for latest python packet manager

sudo pip install ansible

CREATING AND DISTRIBUTING SSH KEYS


ssh-keygen

id_rsa id_rsa.pub

ssh -i id_rsa user1@server1

ssh-copy-id -i id_rsa user1@server1

you can get rid of the ssh in hosts file

make sure to specify the ansible_user=user1


Follow below given steps:

Edit the inventory file to use the SSH private key.
vi playbooks/inventory
Add ansible_ssh_private_key_file=~/.ssh/ansible


AD HOC COMMANDS


ansible -m ping all (m is for module)

you can also run a command directly

EX:

ansible -a 'cat /etc/hosts/' all

you can add to these priveldge 

--become

--become-user nginx


TO GATHER FACTS:

ansible -m setup localhost > /tmp/ansible_facts.txt


ansible -m ping -i /home/thor/playbooks/inventory  all


RUN A COMMAND

ansible -m command -a  date -i /home/thor/playbooks/inventory  web1


SHELL SCRIPTS

EX:

shell-script.sh

export ANSIBLE_GATHERING=explicit
ansible -m ping all
ansible -a 'cat /etc/hosts' all
ansible-playbook playbook.yml

then

sh shell-script.sh

or

chmod 755 shell-script.sh



ansible all -a "hostname" -i inventory
ansible node00 -m copy -a "src=/etc/resolv.conf dest=/tmp/resolv.conf" -i inventory



Follow below given steps:

Create playbook.yml.
vi playbook.yml
Add below given code.
---
- hosts: all
  tasks:
    - shell: cat /etc/redhat-release
Create host_data.sh script.
vi host_data.sh
Add below given code.
export ANSIBLE_GATHERING=False
ansible all -m shell -a uptime -i inventory
ansible-playbook -i inventory playbook.yml -vv
Make it executable.
chmod +x host_data.sh



PRIVILEDGE ESCALATION


sudo pfexec doas ksu runas

su mysql (become a user)


become: yes 

you can specify which method

become_method: doas (example)

you can also use

become_user: nginx

you can set in inventory file or ansible.cfg

--ask-become-pass

EX:

[thor@ansible-controller web1]$ cat file.yml 
---
- hosts: all
  gather_facts: no
  become: true
  become_user: admin
  tasks:
    - name: Create a blank file
      file:
        path: /home/admin/test.txt
        state: touch
        
        
---
- hosts: all
  gather_facts: no
  become: true
  become_user: admin
  tasks:
    - name: Create a blank file
      file:
        path: /home/admin/test.txt
        state: touch
        
        
Boolean

true yes false no etc


--- is for the beginning of file you can merge multiple into one file


double braces for variables

options that expecct variables you don't need to use the double curly brackets

example

var: variable

when conditional statement does not need it

BUT

with_items does expect a variable

you need to encapsulate in quotes if only variable

if the variable is in a message then you don't


ansible_password is the new methond (so don't user ssh_pass)

ssh-keygen -f /home/thor/.ssh/john

ssh-keygen -f /home/thor/.ssh/maria

ssh-copy-id -i /home/thor/.ssh/maria maria@lamp-db


[db_servers]
lamp-db ansible_host=172.20.1.101 ansible_ssh_private_key_file=/home/thor/.ssh/maria ansible_user=maria mysqlservice=mysqld mysql_port=3306 dbname=ecomdb dbuser=ecomuser dbpassword=ecompassword

[web_servers]
lamp-web ansible_host=172.20.1.100 ansible_ssh_private_key_file=/home/thor/.ssh/john ansible_user=john httpd_port=80 repository=https://github.com/kodekloudhub/learning-app-ecommerce.git












